require_relative 'lib/Train'
require_relative 'lib/RailwayStation'
require_relative 'lib/Route'
require_relative 'lib/PassangerTrain'
require_relative 'lib/CargoTrain'
require_relative 'lib/Wagon'

# 4
# Разбить программу на отдельные классы (каждый класс в отдельном файле)
# Разделить поезда на два типа PassangerTrain и CargoTrain, сделать родителя для классов, который будет содержать общие методы и свойства
# Определить, какие методы могут быть помещены в private/protected и вынести их в такую секцию. В комментарии к методу обосновать, почему он был вынесен в private/protected
# Вагоны теперь делятся на грузовые и пассажирские (отдельные классы). К пассажирскому поезду можно прицепить только пассажирские, к грузовому - грузовые.
# Усложненное задание: создать программу в файле main.rb, которая будет позволять пользователю через текстовый интерфейс делать следующее:
# Создавать станции
# Создавать поезда
# Добавлять вагоны к поезду
# Отцеплять вагоны от поезда
# Помещать поезда на станцию
# Просматривать список станций и список поездов на станции

# 5
# Создать модуль, который позволит указывать название компании-производителя и получать его. Подключить модуль к классам Вагон и Поезд
# В классе RailwayStation (жд станция) создать метод класса all, который выводит список всех станций, созданных на данный момент
# В классе Train создать метод класса find, который принимает номер поезда и возвращает объект поезда по номеру или nil, если поезд с таким номером не найден.
# Усложенное задание: Создать модуль InstanceCounter, содержащий следующие методы класса и инстанс-методы, которые подключаются автоматически при вызове include в классе:
#  Методы класса:
#    instances, который возвращает кол-во экземпляров данного класса
# Инастанс-методы:
#     register_instance, который увеличивает счетчик кол-ва экземпляров класса и который можно вызвать из конструктора. При этом, данный метод не должен быть публичным.


# load 'DispatherProg.rb'
station0 = RailwayStation.new 'station0'
station1 = RailwayStation.new 'station1'
train1 = PassangerTrain.new station0
train2 = CargoTrain.new station1

